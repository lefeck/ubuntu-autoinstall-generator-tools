#cloud-config
autoinstall:
  apt:
    disable_components: []
    disable_suites: [security]
    geoip: true
    preserve_sources_list: false
    primary:
    - arches:
      - amd64
      - i386
      uri: https://mirrors.tuna.tsinghua.edu.cn/ubuntu
    - arches:
      - default
      uri: http://ports.ubuntu.com/ubuntu-ports
  drivers:
    install: false
  identity:
    hostname: msa
    # default password: 1qaz@WSX
    password: $6$x666Mgrn9NRnY5bs$rQogVX3FO3JVFc7wzy4krvMUGiCP6/spTI/b/eVc5kr78AlA2LLf5dtm2yfljjzgUBX4.0Zd97PXHayWz4pFQ/
    realname: msa
    username: msa
  kernel:
    package: linux-generic
  keyboard:
    layout: us
    toggle: null
    variant: ''
  locale: en_US.UTF-8
  network:
    ethernets:
      # Note: This NIC name ens136 is my custom name, during installation, if you specify the config-network.sh script, it will
      # be automatically changed to the first NIC name of the machine itself
      ens136:
        addresses:
        - 192.168.10.104/24
        routes:
          - to: default
            via: 192.168.10.1
        nameservers:
          addresses:
          - 114.114.114.114
          search: []
    version: 2
  ssh:
    allow-pw: true
    authorized-keys: []
    install-server: true
  storage:
    config:
      # Partition table
      - { ptable: gpt, path: /dev/sda, wipe: superblock, preserve: false, name: '', grub_device: false, type: disk, id: disk-sda }
      # EFI boot partition
      - { device: disk-sda, size: 536870912, wipe: superblock, flag: boot, number: 1, preserve: false, grub_device: true, type: partition, id: partition-0 }
      - { fstype: fat32, volume: partition-0, preserve: false, type: format, id: format-0 }
      # Linux boot partition
      - { device: disk-sda, size: 1073741824, wipe: superblock, flag: '', number: 2, preserve: false, grub_device: false, type: partition, id: partition-1 }
      - { fstype: ext4, volume: partition-1, preserve: false, type: format, id: format-1 }
      # Partition for LVM, VG
      - { device: disk-sda, size: -1, wipe: superblock, flag: '', number: 3, preserve: false, grub_device: false, type: partition, id: partition-2 }
      - { name: ubuntu-vg, devices: [ partition-2 ], preserve: false, type: lvm_volgroup, id: lvm_volgroup-0 }
      # LV for root
      - { name: ubuntu-lv, volgroup: lvm_volgroup-0, size: -1, wipe: superblock, preserve: false, type: lvm_partition, id: lvm_partition-0 }
      - { fstype: ext4, volume: lvm_partition-0, preserve: false, type: format, id: format-2 }
      # Mount points
      - { path: /, device: format-2, type: mount, id: mount-2 }
      - { path: /boot, device: format-1, type: mount, id: mount-1 }
      - { path: /boot/efi, device: format-0, type: mount, id: mount-0 }
    swap:
      swap: 1G
    grub:
      # This avoids a loop where we autoinstall, reboot to the autoinstaller USB, then autoinstall again and so on.
      reorder_uefi: False
  version: 1
  timezone: Asia/Shanghai
  late-commands:
    - cp -rp /cdrom/mnt /target/
    - chmod +x /target/mnt/script/install-pkgs.sh
    - curtin in-target --target=/target -- /mnt/script/install-pkgs.sh
    # copy template file to specify dirctory
    - curtin in-target --target=/target -- mv /mnt/template.xml /opt
    # copy local file to ISO
    - cp -rp /cdrom/mnt/service  /target/opt
    # to change template file parameters
    - chmod +x /target/mnt/script/config.sh
    - curtin in-target --target=/target -- /mnt/script/config.sh
    # startup kvm images to loading template file
    - cp /cdrom/rc-local.service /target/lib/systemd/system/rc-local.service
    - curtin in-target --target=/target -- ln -s /lib/systemd/system/rc-local.service /etc/systemd/system/rc-local.service
    - cp -p /cdrom/rc.local /target/etc/rc.local
    - chmod +x /target/etc/rc.local
    - systemctl daemon-reload
    #rm -rf /target/mnt/service